name: Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    env:
      TF_IN_AUTOMATION: true
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # Defined inside Terraform Cloud
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Defined inside Terraform Cloud
      aws-region: eu-west-1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.3
          terraform_wrapper: True
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }} # Defined inside Terraform Cloud
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        run: |
            # Build a docker container and push it to ECR 
            echo "Registry: ${{ vars.ECR_REGISTRY }}"
            aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin ${{ vars.ECR_REGISTRY }}
            docker build -t ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:latest .
            echo "Pushing image to ECR..."
            docker push ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:latest
            echo "name=image::${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:latest" >> $GITHUB_OUTPUT

      - name: Update AWS Lambda function
        id: update-lambda
        run: |
          aws lambda update-function-code --function-name ${{ vars.LAMBDA_FUNCTION_NAME }} --image-uri ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:latest
